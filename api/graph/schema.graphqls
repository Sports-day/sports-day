input CreateUserInput {
  name: String!
  email: String!
}

input LoginInput {
  code: String!
  redirectURL: String!
}

input CreateGroupInput {
  name: String!
}

input UpdateGroupInput {
  name: String
}

input UpdateGroupUsersInput {
  userIds: [ID!]!
}

input CreateTeamInput {
  name: String!
  groupId: String!
  userIds: [ID!]!
}

input UpdateTeamInput {
  name: String
  groupId: String 
}

input UpdateTeamUsersInput {
  addUserIds: [ID!]
  removeUserIds: [ID!]
}

input CreateLocationInput {
  name: String!
}

input UpdateLocationInput {
  name: String
}



type Query {
  users: [User!]!
  user(id: ID!): User!
  me: User!
  groups: [Group!]!
  group(id: ID!): Group!
  """
  チームをまとめて取得する
  """
  teams: [Team!]!
  """
  ID指定でチームを取得する
  """
  team(id: ID!): Team!
  locations: [Location!]!
  location(id: ID!): Location!
}

type Mutation {
  createUser(input: CreateUserInput!): User!
  login(input: LoginInput!): AuthResponse!
  createGroup(input: CreateGroupInput!): Group!
  deleteGroup(id: ID!): Group!
  updateGroup(id: ID!, input: UpdateGroupInput!): Group!
  addGroupUsers(id: ID!, input: UpdateGroupUsersInput!): Group!
  removeGroupUsers(id: ID!, input: UpdateGroupUsersInput!): Group!
  """
  チームを作成する
  """
  createTeam(input: CreateTeamInput!): Team!
  """
  チームを削除する
  """
  deleteTeam(id: ID!): Team!
  """
  チームの情報を更新する
  """
  updateTeam(id: ID!, input: UpdateTeamInput!): Team!
  """
  チームメンバーを更新する
  """
  updateTeamUsers(id: ID!, input: UpdateTeamUsersInput!): Team!
  createLocation(input: CreateLocationInput!): Location!
  updateLocation(id: ID!, input: UpdateLocationInput!): Location!
  deleteLocation(id: ID!): Location!
}
