type User {
  id: ID!
  name: String!
  email: String!
  groups: [Group!]!
  teams: [Team!]!
  judgments: [Judgment!]!
}

type AuthResponse {
  token: String!
  user: User!
}

type Group {
  id: ID!
  name: String!
  teams: [Team!]!
  users: [User!]!
  judgments: [Judgment!]!
}

type Team {
  id: ID!
  name: String!
  group: Group!
  users: [User!]!
  competitions: [Competition!]!
  matches: [Match!]!
  judgments: [Judgment!]!
  leagues: [League!]!
}

enum CompetitionType {
  LEAGUE
  TOURNAMENT
}

type Competition {
  id: ID!
  name: String!
  type: CompetitionType!
  teams: [Team!]!
  matches: [Match!]!
  league: League!
}

type Location {
  id: ID!
  name: String!
  matches: [Match!]!
}

enum MatchStatus {
  CANCELED
  STANDBY
  ONGOING
  FINISHED
}

type MatchEntry {
  id: ID!
  team: Team
  score: Int!
}

type Match {
  id: ID!
  time: String!
  status: MatchStatus!
  location: Location
  competition: Competition!
  winnerTeam: Team
  entries: [MatchEntry!]!
  judgment: Judgment
}

type Judgment {
  id: ID!
  name: String
  user: User
  team: Team
  group: Group
}

enum CalculationType {
  TOTAL_SCORE
  DIFF_SCORE
  WIN_SCORE
}

type Standing {
  id: ID!
  team: Team!
  points: Int!
  rank: Int!
  win: Int!
  draw: Int!
  lose: Int!
  goalsFor: Int!
  goalsAgainst: Int!
  goalDiff: Int!
}

type League {
  id: ID!
  name: String!
  teams: [Team!]!
  calculationType: CalculationType!
  standings: [Standing!]!
}

type Information {
  id: ID!
  title: String!
  content: String!
}

type Sport {
  id: ID!
  name: String!
  weight: Int!
}

type Scene {
  id: ID!
  name: String!
}
