type User {
  id: ID!
  name: String!
  email: String!
  groups: [Group!]!
  teams: [Team!]!
}

type Group {
  id: ID!
  name: String!
  teams: [Team!]!
  users: [User!]!
}

type Team {
  id: ID!
  name: String!
  group: Group!
  users: [User!]!
  competitions: [Competition!]!
  matches: [Match!]!
}

type Competition {
  id: ID!
  name: String!
  teams: [Team!]!
  matches: [Match!]!
}

type Location {
  id: ID!
  name: String!
  matches: [Match!]!
}

enum MatchStatus {
  CANCELED
  STANDBY
  ONGOING
  FINISHED
}

type MatchEntry {
  team: Team!
  score: Int!
}

type Match {
  id: ID!
  time: String!
  status: MatchStatus!
  location: Location!
  competition: Competition!
  winnerTeam: Team
  entries: [MatchEntry!]!
}

type AuthResponse {
  token: String!
  user: User!
}

type Information {
  id: ID!
  title: String!
  content: String!
}

type Sport {
  id: ID!
  name: String!
  weight: Int!
}

type Scene {
  id: ID!
  name: String!
}
